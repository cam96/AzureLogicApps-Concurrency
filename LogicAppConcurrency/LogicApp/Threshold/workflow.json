{
    "definition": {
        "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
        "actions": {
            "Initialize_variable_-_Data_Array": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "Data Array",
                            "type": "array",
                            "value": [
                                1,
                                2,
                                3,
                                4,
                                5,
                                6,
                                7,
                                8,
                                9,
                                10,
                                11,
                                12,
                                13,
                                14,
                                15,
                                16,
                                17,
                                18,
                                19,
                                20,
                                21,
                                22,
                                23,
                                24,
                                25,
                                26,
                                27,
                                28,
                                29,
                                30,
                                31,
                                32,
                                33,
                                34,
                                35,
                                36,
                                37,
                                38,
                                39,
                                40,
                                41,
                                42,
                                43,
                                44,
                                45,
                                46,
                                47,
                                48,
                                49,
                                50,
                                51,
                                52,
                                53,
                                54,
                                55,
                                56,
                                57,
                                58,
                                59,
                                60,
                                61,
                                62,
                                63,
                                64,
                                65,
                                66,
                                67,
                                68,
                                69,
                                70,
                                71,
                                72,
                                73,
                                74,
                                75,
                                76,
                                77,
                                78,
                                79,
                                80,
                                81,
                                82,
                                83,
                                84,
                                85,
                                86,
                                87,
                                88,
                                89,
                                90,
                                91,
                                92,
                                93,
                                94,
                                95,
                                96,
                                97,
                                98,
                                99,
                                100
                            ]
                        }
                    ]
                },
                "runAfter": {
                    "Initialize_variable_-_Special_Message": [
                        "SUCCEEDED"
                    ]
                }
            },
            "For_each_-_Data_item": {
                "type": "Foreach",
                "foreach": "@variables('Data Array')",
                "actions": {
                    "Increment_variable_-_Add_to_sum": {
                        "type": "IncrementVariable",
                        "inputs": {
                            "name": "Sum",
                            "value": "@items('For_each_-_Data_item')"
                        },
                        "runAfter": {
                            "Compose_-_Current_Item": [
                                "SUCCEEDED"
                            ]
                        }
                    },
                    "Compose_-_Current_Item": {
                        "type": "Compose",
                        "inputs": "@items('For_each_-_Data_item')"
                    },
                    "Compose_-_Sum": {
                        "type": "Compose",
                        "inputs": "@variables('Sum')",
                        "runAfter": {
                            "Increment_variable_-_Add_to_sum": [
                                "SUCCEEDED"
                            ]
                        }
                    }
                },
                "runAfter": {
                    "Initialize_variable_-_Data_Array": [
                        "SUCCEEDED"
                    ],
                    "Initialize_variable_-_Sum": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_variable_-_Sum": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "Sum",
                            "type": "integer",
                            "value": 0
                        }
                    ]
                },
                "runAfter": {}
            },
            "Condition_-_Is_Sum_5,050": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "equals": [
                                "@variables('Sum')",
                                5050
                            ]
                        }
                    ]
                },
                "actions": {
                    "Response_-_Success": {
                        "type": "Response",
                        "kind": "http",
                        "inputs": {
                            "statusCode": 200,
                            "body": "Success, the correct sum is 5,050!\n\n@{variables('Special Message')}"
                        }
                    }
                },
                "else": {
                    "actions": {
                        "Response_-_Failure": {
                            "type": "Response",
                            "kind": "Http",
                            "inputs": {
                                "statusCode": 400,
                                "body": "An error occurred while calculating the sum.  We calculated @{variables('Sum')}, but it should have been 5,050.\n\n@{variables('Special Message')}"
                            }
                        }
                    }
                },
                "runAfter": {
                    "Condition_-_If_sum_threshold_reached,_add_special_message": [
                        "SUCCEEDED"
                    ]
                }
            },
            "Initialize_variable_-_Special_Message": {
                "type": "InitializeVariable",
                "inputs": {
                    "variables": [
                        {
                            "name": "Special Message",
                            "type": "string"
                        }
                    ]
                },
                "runAfter": {}
            },
            "Condition_-_If_sum_threshold_reached,_add_special_message": {
                "type": "If",
                "expression": {
                    "and": [
                        {
                            "greater": [
                                "@variables('Sum')",
                                10
                            ]
                        },
                        {
                            "equals": [
                                "@contains(variables('Special Message'), 'Special Message: We reached a sum of 10!')",
                                "@false"
                            ]
                        }
                    ]
                },
                "actions": {
                    "Append_to_string_variable_-_Special_message": {
                        "type": "AppendToStringVariable",
                        "inputs": {
                            "name": "Special Message",
                            "value": "Special Message: We reached a sum of 10!"
                        }
                    }
                },
                "else": {
                    "actions": {}
                },
                "runAfter": {
                    "For_each_-_Data_item": [
                        "Succeeded"
                    ]
                }
            }
        },
        "triggers": {
            "When_a_HTTP_request_is_received": {
                "type": "Request",
                "kind": "Http"
            }
        },
        "contentVersion": "1.0.0.0",
        "outputs": {}
    },
    "kind": "Stateful"
}